{"ast":null,"code":"var _jsxFileName = \"/home/mint/Documents/GitHub/Tech-news/src/Context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useEffect, useReducer } from \"react\";\nimport reducer from './reducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet API = \"https://hn.algolia.com/api/v1/search?\";\nconst initialState = {\n  query: \"HTML\",\n  nbPages: 0,\n  page: 0,\n  hits: []\n};\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchApiData = async url => {\n    try {\n      const res = await fetch(url);\n      const data = await res.json();\n      // console.log(data)\n      dispatch({\n        type: \"Get_Stories\",\n        payload: {\n          hits: data.hits,\n          nbPages: data.nbPages\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const removePost = Post_ID => {\n    dispatch({\n      type: \"Remove_Posts\",\n      payload: Post_ID\n    });\n  };\n  useEffect(() => {\n    fetchApiData(`${API}query=${state.query}&page${state.page}`);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      ...state,\n      removePost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AppProvider;\nconst useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider, useGlobalContext };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useContext","useEffect","useReducer","reducer","jsxDEV","_jsxDEV","API","initialState","query","nbPages","page","hits","AppContext","createContext","AppProvider","children","_s","state","dispatch","fetchApiData","url","res","fetch","data","json","type","payload","error","console","log","removePost","Post_ID","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["/home/mint/Documents/GitHub/Tech-news/src/Context.js"],"sourcesContent":["import React, { useContext, useEffect, useReducer } from \"react\";\nimport reducer from './reducer'\n\nlet API = \"https://hn.algolia.com/api/v1/search?\"\n\n\n\nconst initialState = {\n    query: \"HTML\",\n    nbPages: 0,\n    page: 0,\n    hits: [],\n}\n\nconst AppContext = React.createContext();\n\n\nconst AppProvider = ({ children }) => {\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n\n    const fetchApiData = async (url) => {\n        try {\n            const res = await fetch(url);\n            const data = await res.json();\n            // console.log(data)\n            dispatch({\n                type:\"Get_Stories\",\n                payload:{\n                    hits:data.hits,\n                    nbPages:data.nbPages\n                }\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    const removePost = (Post_ID) => {dispatch({\n        type:\"Remove_Posts\",\n        payload:Post_ID\n    })\n}\n\n    useEffect(() => {\n        fetchApiData(`${API}query=${state.query}&page${state.page}`)\n    }, []);\n\n    return (\n        <AppContext.Provider value={{...state, removePost}} >\n            {children}\n        </AppContext.Provider>\n    )\n}\n\nconst useGlobalContext = () => {\n    return useContext(AppContext)\n}\n\nexport { AppContext, AppProvider, useGlobalContext }"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAChE,OAAOC,OAAO,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,IAAIC,GAAG,GAAG,uCAAuC;AAIjD,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE,CAAC;EACVC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE;AACV,CAAC;AAED,MAAMC,UAAU,gBAAGb,KAAK,CAACc,aAAa,CAAC,CAAC;AAGxC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAElC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,UAAU,CAACC,OAAO,EAAEI,YAAY,CAAC;EAG3D,MAAMY,YAAY,GAAG,MAAOC,GAAG,IAAK;IAChC,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC5B,MAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;MAC7B;MACAN,QAAQ,CAAC;QACLO,IAAI,EAAC,aAAa;QAClBC,OAAO,EAAC;UACJf,IAAI,EAACY,IAAI,CAACZ,IAAI;UACdF,OAAO,EAACc,IAAI,CAACd;QACjB;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,MAAMG,UAAU,GAAIC,OAAO,IAAK;IAACb,QAAQ,CAAC;MACtCO,IAAI,EAAC,cAAc;MACnBC,OAAO,EAACK;IACZ,CAAC,CAAC;EACN,CAAC;EAEG9B,SAAS,CAAC,MAAM;IACZkB,YAAY,CAAC,GAAGb,GAAG,SAASW,KAAK,CAACT,KAAK,QAAQS,KAAK,CAACP,IAAI,EAAE,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA,CAACO,UAAU,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAC,GAAGhB,KAAK;MAAEa;IAAU,CAAE;IAAAf,QAAA,EAC9CA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAE9B,CAAC;AAAArB,EAAA,CArCKF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAuCjB,MAAMyB,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAOxC,UAAU,CAACY,UAAU,CAAC;AACjC,CAAC;AAAA4B,GAAA,CAFKD,gBAAgB;AAItB,SAAS3B,UAAU,EAAEE,WAAW,EAAEyB,gBAAgB;AAAE,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}