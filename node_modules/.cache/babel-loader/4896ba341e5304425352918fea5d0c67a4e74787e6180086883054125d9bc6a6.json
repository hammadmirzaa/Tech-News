{"ast":null,"code":"var _jsxFileName = \"/home/mint/Documents/GitHub/Tech-news/src/Stories.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useGlobalContext } from './Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stories = () => {\n  _s();\n  const context = useGlobalContext();\n  if (!context || !Array.isArray(context)) {\n    // Handle the error or provide a fallback\n    console.error(\"Context is not iterable:\", context);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading context\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n  const [hits, nbPages] = useGlobalContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Tech Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this), hits.map(hit => {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: hit.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 18\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Stories, \"I4sibLSdCAHqV+aHr3ERzbXB2oM=\", false, function () {\n  return [useGlobalContext, useGlobalContext];\n});\n_c = Stories;\nexport default Stories;\nvar _c;\n$RefreshReg$(_c, \"Stories\");","map":{"version":3,"names":["React","useEffect","useGlobalContext","jsxDEV","_jsxDEV","Stories","_s","context","Array","isArray","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","hits","nbPages","map","hit","title","_c","$RefreshReg$"],"sources":["/home/mint/Documents/GitHub/Tech-news/src/Stories.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useGlobalContext } from './Context'\r\n\r\nconst Stories = () => {\r\n  const context = useGlobalContext();\r\n  \r\n  if (!context || !Array.isArray(context)) {\r\n    // Handle the error or provide a fallback\r\n    console.error(\"Context is not iterable:\", context);\r\n    return <div>Error loading context</div>;\r\n  }\r\n  const [hits, nbPages] = useGlobalContext()\r\n  return (\r\n    <div> <h2>My Tech Posts</h2>\r\n      {\r\n        hits.map((hit) => {\r\n          return <h2>{hit.title}</h2>\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Stories"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,gBAAgB,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAGL,gBAAgB,CAAC,CAAC;EAElC,IAAI,CAACK,OAAO,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;IACvC;IACAG,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEJ,OAAO,CAAC;IAClD,oBAAOH,OAAA;MAAAQ,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzC;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,gBAAgB,CAAC,CAAC;EAC1C,oBACEE,OAAA;IAAAQ,QAAA,GAAK,GAAC,eAAAR,OAAA;MAAAQ,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAExBC,IAAI,CAACE,GAAG,CAAEC,GAAG,IAAK;MAChB,oBAAOhB,OAAA;QAAAQ,QAAA,EAAKQ,GAAG,CAACC;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAC7B,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV,CAAC;AAAAV,EAAA,CAlBKD,OAAO;EAAA,QACKH,gBAAgB,EAORA,gBAAgB;AAAA;AAAAoB,EAAA,GARpCjB,OAAO;AAoBb,eAAeA,OAAO;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}